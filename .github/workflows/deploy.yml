on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTION_APP_NAME: github-branch-protection-service
  APP_PACKAGE_PATH: .

jobs:
  infra-deploy:
    name: Terraform Apply
    runs-on:
      - ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Terraform Apply
        run: |
          set -o pipefail
          terraform init
          terraform apply -auto-approve
        id: apply
        working-directory: tf
        env:
          GITHUB_TOKEN:  ${{ secrets.ORG_HOOK_PAT }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_github_webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          TF_VAR_github_enforcer_pat: ${{ secrets.ENFORCER_PAT }}
          TF_VAR_function_app_name: ${{ env.AZURE_FUNCTION_APP_NAME }}

  app-deploy:
    name: App Deploy
    runs-on:
      - ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Node Setup
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Resolve Project Dependencies Using Npm
        shell: bash
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTION_APP_NAME }}
          package: ./${{ env.APP_PACKAGE_PATH }}
        env:
          AZURE_RBAC_CREDENTIALS: ${{ secrets.AZURE_RBAC_CREDENTIALS }}